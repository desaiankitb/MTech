#include<stdio.h>
#include<strings.h>

int main()
{
	int pfd[2];
	int n=0,pid[2],cPid[2];
	int status;

	if(pipe(pfd)!=0)
	{
		printf("Error\n");
		return -1;
	}
	else
	{
		pid[0]=fork();		
		if(pid[0]>0)
		{
			printf("Parent Process %d says hello to child\n",getpid());	
			cPid[0]=waitpid(pid[0],&status,0);		
			pid[1]=fork();
			if(pid[1]>0)
			{
				cPid[1]=waitpid(pid[1],&status,0);
				return 0;
			}
			else if(pid[0]==0)
			{
				printf("Child Process %d will run 'sort' command\n",getpid());
				close(pfd[1]);
				dup(fdp[0],0);
				close(pfd[0]);
				execl("/bin/sort","sort",(char *)NULL);
			
			}
			else
			{
				printf("Error : In calling fork()");
				return -1;
			}
		}
		else if(pid[0]==0)
		{
			printf("Child Process %d will run 'ls' command\n",getpid());
			close(pfd[0]);
			dup(fdp[1],1);
			close(pfd[1]);
			execl("/bin/ls","ls","-l",(char *)NULL);
			
		}
		else
		{
			printf("Error : In calling fork()");
			return -1;
		}
		
	}				
		
return 0;
}
